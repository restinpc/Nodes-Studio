/* Nodes Studio 3.0.0.1 script. 15/02/2019 */
const canvas=document.createElement("canvas"),ctx=canvas.getContext("2d");var t=0;class RadioInput{constructor(a,b){this.inputs=document.querySelectorAll(`input[name=${a}]`);for(let c of this.inputs)c.addEventListener("change",b)}get value(){for(let a of this.inputs)if(a.checked)return a.value}}class Input{constructor(a,b){this.input=document.getElementById(a);try{this.input.addEventListener("change",b)}catch(a){}this.valueAttrib="checkbox"===this.input.type?"checked":"value"}get value(){return this.input[this.valueAttrib]}}class CubeFace{constructor(a){this.faceName=a,this.img=document.createElement("input"),this.img.type="hidden",this.img.name="img_"+a}setPreview(){}setDownload(a){var b=new FormData,c=this.faceName;b.append("url",a);try{var d=root_dir+"/cubemap.php?name="+c+"&img_id="+parseInt($id("cubemap_id").value)}catch(a){var d=root_dir+"/cubemap.php?name="+c}$.ajax({type:"POST",url:d,data:b,processData:!1,contentType:!1}).done(function(){t++,$id("generating").innerHTML="Building cubemaps.. "+parseInt(100*(t/6))+"%",6==t&&setTimeout(function(){try{$id("next_pano").submit()}catch(a){}try{$id("worker_wnd").style.display="none",$id("new_scene_details").style.display="block"}catch(a){}},3e3)})}}function removeChildren(a){for(;a.firstChild;)a.removeChild(a.firstChild)}const mimeType={jpg:"image/jpeg",png:"image/png"};function getDataURL(a,b){return canvas.width=a.width,canvas.height=a.height,ctx.putImageData(a,0,0),new Promise(a=>{a(canvas.toDataURL(mimeType[b]))})}const dom={imageInput:document.getElementById("imageInput"),faces:document.getElementById("faces"),generating:document.getElementById("generating")};try{dom.imageInput.addEventListener("change",loadImage)}catch(a){}const settings={cubeRotation:new Input("cubeRotation",loadImage),interpolation:new RadioInput("interpolation",loadImage),format:new RadioInput("format",loadImage)},facePositions={pz:{x:1,y:1},nz:{x:3,y:1},px:{x:2,y:1},nx:{x:0,y:1},py:{x:1,y:0},ny:{x:1,y:2}};function loadImage(){const a=new Image;try{var b=dom.imageInput.files[0];if(!b)return;a.src=URL.createObjectURL(b)}catch(c){var b=$id("inputImage").src;if(!b)return;a.src=b,console.log(b)}a.addEventListener("load",()=>{const{width:b,height:c}=a;canvas.width=b,canvas.height=c,ctx.drawImage(a,0,0);const d=ctx.getImageData(0,0,b,c);processImage(d)})}let finished=0,workers=[];function processImage(a){removeChildren(dom.faces),dom.generating.style.visibility="visible";for(let b of workers)b.terminate();for(let[b,c]of Object.entries(facePositions))renderFace(a,b,c)}function renderFace(a,b,c){const d=new CubeFace(b);dom.faces.appendChild(d.img);const e={data:a,face:b,rotation:Math.PI*settings.cubeRotation.value/180,interpolation:settings.interpolation.value},f=new Worker(root_dir+"/script/convert.js"),g=({data:a})=>{const b=settings.format.value;getDataURL(a,b).then(a=>d.setDownload(a,b)),finished++,6==finished&&(finished=0,workers=[],$id("generating").innerHTML="Building cubemaps.. 0%")};f.onmessage=({data:a})=>{const b=a.width*c.x,h=a.height*c.y;getDataURL(a,"jpg").then(a=>d.setPreview(a,b,h)),f.onmessage=g,f.postMessage(e)},f.postMessage(Object.assign({},e,{maxWidth:200,interpolation:"linear"})),workers.push(f)}